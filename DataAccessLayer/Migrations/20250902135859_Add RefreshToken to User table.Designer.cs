// <auto-generated />
using System;
using DataAccessLayer.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccessLayer.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250902135859_Add RefreshToken to User table")]
    partial class AddRefreshTokentoUsertable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DataAccessLayer.Models.OrderEntities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<double>("TotalAmount")
                        .HasColumnType("float");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int?>("VoucherId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("VoucherId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            OrderDate = new DateTime(2025, 8, 10, 0, 0, 0, 0, DateTimeKind.Local),
                            Status = 1,
                            TotalAmount = 5.0,
                            UserId = 2,
                            VoucherId = 1
                        },
                        new
                        {
                            Id = 2,
                            OrderDate = new DateTime(2025, 8, 10, 0, 0, 0, 0, DateTimeKind.Local),
                            Status = 0,
                            TotalAmount = 2.2999999999999998,
                            UserId = 3
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Models.OrderEntities.OrderDetail", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.Property<double>("UnitPrice")
                        .HasColumnType("float");

                    b.HasKey("OrderId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetail");

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            ProductId = 1,
                            Quantity = 2,
                            Total = 5.0,
                            UnitPrice = 2.5
                        },
                        new
                        {
                            OrderId = 1,
                            ProductId = 3,
                            Quantity = 1,
                            Total = 0.5,
                            UnitPrice = 0.5
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Models.ProductEntities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("ProductCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductCategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Traditional rice porridge with pork intestines",
                            ImageUrl = "/images/porridge1.png",
                            Name = "Pork Intestine Porridge",
                            Price = 2.5,
                            ProductCategoryId = 1,
                            Quantity = 100
                        },
                        new
                        {
                            Id = 2,
                            Description = "Rice porridge with shredded chicken",
                            ImageUrl = "/images/porridge2.png",
                            Name = "Chicken Porridge",
                            Price = 2.0,
                            ProductCategoryId = 1,
                            Quantity = 100
                        },
                        new
                        {
                            Id = 3,
                            Description = "Rice porridge with century egg and minced pork",
                            ImageUrl = "/images/porridge3.png",
                            Name = "Century Egg Porridge",
                            Price = 2.7999999999999998,
                            ProductCategoryId = 1,
                            Quantity = 80
                        },
                        new
                        {
                            Id = 6,
                            Description = "Refreshing iced tea",
                            ImageUrl = "/images/drink1.png",
                            Name = "Iced Tea",
                            Price = 0.20000000000000001,
                            ProductCategoryId = 3,
                            Quantity = 100
                        },
                        new
                        {
                            Id = 7,
                            Description = "Homemade soy milk",
                            ImageUrl = "/images/drink2.png",
                            Name = "Soy Milk",
                            Price = 0.40000000000000002,
                            ProductCategoryId = 3,
                            Quantity = 100
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Models.ProductEntities.ProductCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProductCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Vietnamese rice porridge dishes",
                            Name = "Porridge"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Beverages",
                            Name = "Drink"
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Models.UserEntities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RefreshTokenExpiryTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "admin@chaoshop.com",
                            Name = "Admin",
                            Password = "hashed_admin",
                            Phone = "0123456789",
                            Role = 0
                        },
                        new
                        {
                            Id = 2,
                            Email = "david@chaoshop.com",
                            Name = "David Nguyen",
                            Password = "hashed_david",
                            Phone = "0987654321",
                            Role = 1
                        },
                        new
                        {
                            Id = 3,
                            Email = "lisa@chaoshop.com",
                            Name = "Lisa Tran",
                            Password = "hashed_lisa",
                            Phone = "0977777777",
                            Role = 1
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Models.UserEntities.UserVoucher", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("VoucherId")
                        .HasColumnType("int");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.HasKey("UserId", "VoucherId");

                    b.HasIndex("VoucherId");

                    b.ToTable("UserVouchers");
                });

            modelBuilder.Entity("DataAccessLayer.Models.UserEntities.Voucher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("DiscountAmount")
                        .HasColumnType("float");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Vouchers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "BREAKFAST10",
                            Description = "10% discount for all porridge before 10 AM",
                            DiscountAmount = 0.10000000000000001,
                            ExpiryDate = new DateTime(2025, 8, 10, 0, 0, 0, 0, DateTimeKind.Local),
                            Name = "10% Off Breakfast",
                            Quantity = 50,
                            Status = 0
                        },
                        new
                        {
                            Id = 2,
                            Code = "PORRIDGE21",
                            Description = "Order 2 porridge, get 1 free drink",
                            DiscountAmount = 0.40000000000000002,
                            ExpiryDate = new DateTime(2025, 8, 10, 0, 0, 0, 0, DateTimeKind.Local),
                            Name = "Buy 2 Get 1 Free",
                            Quantity = 30,
                            Status = 0
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Models.OrderEntities.Order", b =>
                {
                    b.HasOne("DataAccessLayer.Models.UserEntities.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Models.UserEntities.Voucher", "Voucher")
                        .WithMany("Orders")
                        .HasForeignKey("VoucherId");

                    b.Navigation("User");

                    b.Navigation("Voucher");
                });

            modelBuilder.Entity("DataAccessLayer.Models.OrderEntities.OrderDetail", b =>
                {
                    b.HasOne("DataAccessLayer.Models.OrderEntities.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Models.ProductEntities.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DataAccessLayer.Models.ProductEntities.Product", b =>
                {
                    b.HasOne("DataAccessLayer.Models.ProductEntities.ProductCategory", "ProductCategory")
                        .WithMany("Products")
                        .HasForeignKey("ProductCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductCategory");
                });

            modelBuilder.Entity("DataAccessLayer.Models.UserEntities.UserVoucher", b =>
                {
                    b.HasOne("DataAccessLayer.Models.UserEntities.User", "User")
                        .WithMany("UserVouchers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Models.UserEntities.Voucher", "Voucher")
                        .WithMany("UserVouchers")
                        .HasForeignKey("VoucherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("Voucher");
                });

            modelBuilder.Entity("DataAccessLayer.Models.OrderEntities.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("DataAccessLayer.Models.ProductEntities.Product", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("DataAccessLayer.Models.ProductEntities.ProductCategory", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("DataAccessLayer.Models.UserEntities.User", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("UserVouchers");
                });

            modelBuilder.Entity("DataAccessLayer.Models.UserEntities.Voucher", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("UserVouchers");
                });
#pragma warning restore 612, 618
        }
    }
}
